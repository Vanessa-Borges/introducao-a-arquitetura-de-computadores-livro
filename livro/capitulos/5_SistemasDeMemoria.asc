== Sistema de Memória

.Objetivos do capítulo
____________________
Ao final deste capítulo você deverá ser capaz de:

* Conhecer o Sistema de Memória e seus componentes
* Descrever as principais características das tecnologias utilizadas para memórias primárias e secundárias
* Apresentar conceitos detalhados sobre as Memórias Cache e seu funcionamento
____________________

Sistema de Memória é uma das principais partes do computador, juntamente com o processador. 
Todos programas e seus dados são mantidos no Sistema de Memória e ele é responsável por entregar o mais rapidamente para o processador quando solicitado.
Não é uma tarefa simples porque as memórias tendem a ser muito mais lentas do que o processador e sua tecnologia não tem avançado tão rapidamente quanto a dos processadores.
Neste capítulo vamos entender um pouco mais sobre esse sistema e como ele apoia o trabalho dos processadores em busca de sistemas cada vez mais eficientes.

=== Introdução

Em todo sistema computacional, a memória é componente essencial e de extrema relevância para o bom funcionamento do computador.
Com o passar dos anos, as memórias evoluíram bastante e são formadas por vários componentes numa chamada Hierarquia de Memória.
Na <<fig_hierarquia>> é apresentada como o ela é organizada.
As memórias de mais velozes possuem custo por bit maior, devido às suas tecnologias, mais avançadas e mais complexas para fabricação

[[fig_hierarquia]]
.Hierarquia de Memória
image::images/cap5/fig_hierarquia.jpg[scaledwidth=“100%”]


As tecnologias mais avançadas até o momento são as chamadas SRAM (Static Random-Access Memory).
Elas são mais utilizadas em registradores e memórias Cache. 
Por serem mais caras, elas estão presentes nos computadores em quantidades menores, para não encarecer demais o projeto.
Já a memória principal é fabricada utilizando tecnologia DRAM (Static Random-Access Memory).
Por serem de tecnologia menos sofisticada, são mais lentas, mas mais baratas do que as SRAM. 
Por isso elas são montadas em maior quantidade do que as memórias Cache e os registradores.


Já as Memórias Secundárias são formadas por tecnologias de memórias Magnéticas e Ópticas.
Suas principais características são o baixo preço por bit, baixo preço e, por consequência, alta capacidade.
Além disso, as Memórias Secundárias são memórias não voláteis, ou seja, seus conteúdos são preservados mesmo com a interrupção da fonte de energia.
Devido ao avanço da complexidade das memórias dos computadores, elas são organizadas formando o chamado Sistema de Memória.

=== Princípio da Localidade

Muitos dizem que o Sistema de Memória se inspirou no sistema de memória do corpo humano, onde lembranças mais recentes são armazenadas em memórias menores de curta duração e lembranças mais antigas e pertinentes são armazenadas em memórias de longa duração e maior capacidade.
No sistema computacional o Sistema de Memória se baseia no Princípio da Localidade, que se divide em Temporal e Espacial.

O Princípio da Localidade Temporal diz que um dado acessado recentemente tem mais chances de ser usado novamente, do que um dado usado há mais tempo.
Isso é verdade porque as variáveis de um programa tendem a ser acessadas várias vezes durante a execução de um programa, e as instruções usam bastante comandos de repetição e sub-programas, o que faz instruções serem acessadas repetidamente.
Sendo assim, o Sistema de Memória tende a manter os dados e instruções recentemente acessados no topo da Hierarquia de Memória.

Já o Princípio da Localidade Espacial diz que há uma probabilidade de acesso maior para dados e instruções em endereços próximos àqueles acessados recentemente.
Isso também é verdade porque os programas são sequenciais e usam de repetições.
Sendo assim, quando uma instrução é acessada, a instrução com maior probabilidade de ser executada em seguida, é a instrução logo a seguir dela.
Para as variáveis o princípio é semelhante. 
Variáveis de um mesmo programa são armazenadas próximas uma às outras, e vetores e matrizes são armazenados em sequência de acordo com seus índices.
Baseado neste princípio, o Sistema de Memória tende a manter dados e instruções próximos aos que estão sendo executados no topo da Hierarquia de Memória.


=== Funcionamento do Sistema de Memória

O ponto inicial da memória é a Memória Principal (por isso ela recebe esse nome).
Todo programa para ser executado deve ser armazenado nesta memória, com todo seus dados e instruções.

[NOTE]  

Mais a frente veremos que nem sempre é possível manter todos programas em execução na Memória Principal.

Devido ao Princípio da Localidade, sempre que o processador solicita um dado/instrução da memória, ele e seus vizinhos (Localidade Espacial) são copiados para a Memória Cache no nível superior a seguir da hierarquia, Cache L2, por exemplo.
Uma parte menor deste bloco é transferido para o nível seguinte (Cache L1, por exemplo), e uma parte ainda menor (porções individuais) é transferida para registradores.

Quando o processador vai acessar um endereço de memória, ele faz uma consulta no sentido inverso, do topo da hierarquia até a base.
Primeiro ele busca o conteúdo nos registradores.
Se não encontrar, ele vai buscar no primeiro nível de Cache.
Se não encontrar, ele busca no próximo nível de Cache e, por fim, na Memória Principal.

O grande problema é que os níveis superiores da Hierarquia de Memória possuem capacidade cada vez menores a medida que se aproximam do topo.
Isso implica na falta de capacidade de armazenar todos dados e instruções que estão sendo executadas pelo processador.
Por isso, o sistema deve decidir o que é mais relevante e fica nos níveis mais altos, e o que é menos relevante e deve ficar nos níveis inferiores da hierarquia.

Perceba que tudo é uma questão de aposta.
Tudo o que o processador possui a seu favor é o Princípio da Localidade, mas que se baseia em probabilidade.
Há uma probabilidade de um endereço próximo (temporal e espacialmente) a um que foi acessado, ser acessado também, mas não há garantias.
Muitas vezes ele acerta, mas muitas outras ele erra, e quem perde é o desempenho geral do sistema.

Como fazer então para aumentar a probabilidade de um endereço ser encontrado no topo da Hierarquia de Memória?
A resposta é simples, mas não barata!
Deve-se investir em registradores e memórias Cache maiores.

Quando as memórias estão cheias, o Sistema de Memória possui uma tarefa difícil, que é remover um conteúdo considerado menos relevante no momento, e substituir por um outro mais relevante naquele momento.
A única memória que continua com uma cópia de todos os conteúdos é a Memória Principal.
A escolha de qual conteúdo deve ser removido se baseia também no Princípio da Localidade, mas há diversas formas de implementar o algoritmo de substituição de conteúdos, que também podem influenciar no desempenho do sistema.

[NOTE] 

Veremos que a Memória Virtual quebra essa ideia de que a Memória Principal sempre mantém cópia de todos programas.

=== Memórias de Semicondutores

As memórias de semicondutores são consideradas aquelas que utilizam composição de transistores como forma principal de armazenamento.
Dentro deste grupo estão os registradores, memórias cache, memórias principais e, mais recentemente, cartões de memória, pen-drives e os chamados Discos de Estado Sólido (SSD), que não possuem formatos de disco, mas receberam esse nome por serem os candidatos mais cotados a substituírem os Discos Rígidos (HD).

Dentro das memórias de semicondutores vamos apresentar: 

* Random-Access Memory (RAM)
* Dynamic RAM (DRAM)
* Static RAM (SRAM)
* Synchronous Dynamic RAM (SDRAM)
* Double-Data Rate SDRAM (DDR-DRAM)
* Read-Only Memory (ROM)

==== Random-Access Memory (RAM)

O termo Random-Access Memory, ou RAM, ou Memória de Acesso Aleatório em português, veio porque essa tecnologia substituiu as anteriores memórias de Acesso Sequencial. 
No Acesso Sequencial, os endereços são acessados obrigatoriamente de forma sequencial, 0, 1, 2, 3,... 
Essa é a forma de acesso de memórias magnéticas, como fitas cassete e VHS, e os discos rígidos (com alguma melhoria).

Já as memórias de acesso aleatório podem acessar qualquer endereço aleatoriamente, independente de sua posição.
Hoje, o termo Memória RAM é utilizado de forma errada para representar a Memória Principal, mas na verdade, tanto registradores, quanto memória Cache e Memória Principal são feitos utilizando tecnologia RAM.
Assim, RAM é uma tecnologia e não uma memória.
A partir de hoje então, não utilize mais memória RAM, mas Memória Principal quando se referir à principal memória dos computadores.

==== Dynamic RAM (DRAM)

As memórias Dynamic RAM são as mais simples de serem fabricadas.
Como mostrado na <<fig_dram>>, é formada simplesmente por um único transistor e um capacitor.

[[fig_dram]]
.Estrutura de uma DRAM
image::images/cap5/fig_dram.png[scaledwidth=“80%”]

A figura apresenta uma memória de um único bit.
O transistor cuida de abrir ou fechar a passagem de corrente para linha B.
Já a linha de endereço é utilizada para fechar a porta do transistor e carregar o capacitor.
Se o capacitor estiver carregado, é considerado que a memória contém o bit 1.
Caso contrário, a memória contém o bit 0.

A simplicidade desta implementação traz resultado no seu principal ponto negativo.
Assim como todo capacitor, o capacitor responsável por manter a carga da memória só é capaz de manter a carga por um curto tempo.
Aos poucos, a carga vai sendo dissipada, até o momento em que era o bit 1, se torna 0, gerando um erro.
Para evitar isso, é adicionado um circuito a parte que de lê o conteúdo da memória periodicamente e recarrega todos capacitores que estão com bit 1.

Vamos lembrar que as memórias hoje estão na casa de Giga Bytes.
Ou seja, bilhões de bytes. 
Então, bilhões de capacitores devem ser lidos e recarregados periodicamente para que os conteúdos não sejam perdidos.
Esta técnica é chamada de *Refrescagem*.
Ela resolve o problema dos dados perdidos, mas atrapalha bastante o desempenho da memória.
Sempre que a Refrescagem precisa ser realizada, todo acesso é bloqueado.
Nada pode ser lido ou escrito enquanto isso.
Assim, o processador precisa esperar que o processo de refrescarem termine para poder acessar novamente a memória.

Devido à sua simplicidade de fabricação, as memórias DRAM são mais utilizadas para compor a Memória Principal, devido ao preço mais acessível do que o das mais modernas SRAM.


==== Static RAM (SRAM)

As memórias RAM Estáticas (Static RAM ou SRAM) se baseiam na composição de transistores	para que a carga para manter o bit 1 e compartilhada entre outros transistores.
A <<fig_sram>> apresenta essa composição de transistores.

[[fig_sram]]
.Estrutura de uma SRAM
image::images/cap5/fig_sram.png[scaledwidth=“80%”]

Nesta ilustração, o transistor T5 é que determina se o bit é 0 ou 1, e os transistores, T1 e T3 são utilizados para recarregá-lo, caso sua carga reduza.
Já os transistores T2, T4 e T6 são o complemento deles de forma inversa, adicionando um nível a mais de segurança.
Essa técnica é chamada Complementary MOS (CMOS).

As memórias SRAM não precisam de circuito de refrescarem, por isso, não precisam parar e tornam-se muito mais rápidas do que as DRAM.
O problema é que elas precisam de muito mais transistores por bit, o que torna o projeto maior e, por consequência, mais caro.

Devido ao seu preço, elas são mais utilizadas em memórias Cache, mas em menor quantidade do que as memórias principais.

==== Synchronous Dynamic RAM (SDRAM)

Já a Synchronous Dynamic RAM (SDRAM) é uma DRAM com um simples avanço.
O relógio que determina o tempo das SDRAM vem diretamente do processador, e não de um relógio próprio, como nas DRAM convencionais.
Isso faz com que o momento exato da Refrescagem seja determinado pelo processador.
Dessa forma, o processador sabe exatamente quando ele não pode acessar a memória, e dedica seu tempo às outras tarefas, ou seja, o processador não perde mais tanto tempo esperando a memória.

==== Double-Data Rate SDRAM (DDR-DRAM)

Após as SDRAM surgiram as DDR-SDRAM.
As memórias DDR são síncronas como as SDRAM, mas elas possuem um barramento extra que faz com que, a cada ciclo de clock da memória, o dobro de dados são transferidos.
As memórias DDR e suas sucessoras são mais utilizadas para utilização como memória principal.

==== Read-Only Memory (ROM)

As memórias ROM também possuem um nome criado há muitos anos e hoje é um termo que não faz tanto sentido.
Em português significam Memória Apenas de Leitura.
Isso porque as primeiras ROM eram escritas durante a fabricação e não podiam mais ser modificadas.
Mas outras gerações foram desenvolvidas que permitiram a escrita e tornou o termo ROM antiquado.
Todas memórias ROM são não voláteis, ou seja, mantêm seu conteúdo mesmo com a falta do fornecimento de energia elétrica.
São tipos de memória ROM:

* PROM
* EPROM
* EEPROM
* Flash

As memórias PROM (Programmable ROM) são memórias que vem com a conexões abertas de fábrica e precisam de uma máquina para que os dados sejam escritos nelas.
Uma vez escritos, eles não podem mais ser modificados.

Já as memórias EPROM (Erasable PROM) se baseiam no mesmo princípio das PROM, mas uma máquina especial que utiliza raios UV pode ser utilizada para apagar todo seu conteúdo e escrever novamente. 

As memórias EEPROM (Electronically Erasable PROM)  possuem o mesmo princípio das PROM, mas a máquina utilizada para escrita e apagar é eletrônica. 
Isso permite que um computador, ou um máquina especial seja utilizada para escrever nas memórias, as tornando muito mais utilizadas.

Já as memórias Flash se baseiam no princípio das memórias EEPROM, mas o processo de apagar é feito em blocos grandes, o que acelera bastante o processo.

As memórias ROM são muito utilizadas na formação da BIOS dos computadores e as memórias Flash são o princípio básico de cartões de memória, pen-drives e memórias de estado sólido.

//=== Memórias Secundárias

//=== Memória Virtual

//=== Memória Cache



// === Recapitulando

// Revisão do que foi aprendido.

// Reserve o último parágrafo para realizar uma *ponte* para o próximo capítulo.

// === Atividades


// . Texto da atividade.

// . Texto da atividade.

// . Texto da atividade.


// Sempre terminar o arquivo com uma nova linha.

